"""changed int to float on food table

Revision ID: ddfac3eb7c82
Revises: ac6c7b15b438
Create Date: 2020-06-28 22:28:03.291278

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import json
import os
import datetime

# revision identifiers, used by Alembic.
revision = 'ddfac3eb7c82'
down_revision = 'ac6c7b15b438'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('foods', 'cholesterol',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('foods', 'dietary_fiber',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('foods', 'protein',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('foods', 'saturated_fat',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('foods', 'sodium',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('foods', 'sugars',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('foods', 'total_carbs',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('foods', 'total_fat',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('foods', 'trans_fat',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    # ### end Alembic commands ###

    ## seed demo_user
    meta = sa.MetaData(bind=op.get_bind())
    meta.reflect(only=('users',))
    users = sa.Table('users', meta)
    op.bulk_insert(users, [{'email':'demo@demo.com', 'body_weight':260, 'gender':'male', 'height':'6.0', 'age': 23, 'activity_factor':1.375, 'bmr':2476.4, 'cal_needs':3405, 'cal_limit':2405}])

    ## seed weights
    meta = sa.MetaData(bind=op.get_bind())
    meta.reflect(only=('foods',))
    foods = sa.Table('foods', meta)
    op.bulk_insert(foods, [{'user_id':1, 'total_fat': 0.4, 'saturated_fat': 0.1, 'trans_fat':0, 'cholesterol':0, 'sodium':27, 'total_carbs':16 , 'dietary_fiber':3.7 , 'sugars':10 , 'protein':3.2 , 'total_cal':70 , 'name':'Tomato Sauce' },
                            {'user_id':1, 'total_fat':1.3, 'saturated_fat':0.2, 'trans_fat':0, 'cholesterol':0, 'sodium':1, 'total_carbs':43, 'dietary_fiber':2.5 , 'sugars':0.8 , 'protein':8 , 'total_cal':221 , 'name': 'Spaghetti pasta' },
                            {'user_id':1, 'total_fat':30, 'saturated_fat':11, 'trans_fat':1.8, 'cholesterol':78, 'sodium':67, 'total_carbs':0 , 'dietary_fiber':0 , 'sugars':0 , 'protein':14 , 'total_cal':332 , 'name':'Ground beef 70/30' },
                            {'user_id':1, 'total_fat':1, 'saturated_fat':0, 'trans_fat':0, 'cholesterol':25, 'sodium':490, 'total_carbs':2 , 'dietary_fiber':0 , 'sugars':0 , 'protein':10 , 'total_cal':50 , 'name':'Hillshire Farm Turkey Breast' },
                            {'user_id':1, 'total_fat':1, 'saturated_fat':0.2, 'trans_fat':0, 'cholesterol':0, 'sodium':147, 'total_carbs':15 , 'dietary_fiber':0.8 , 'sugars':1.5 , 'protein':2.7 , 'total_cal':79 , 'name':'White Bread' },
                            {'user_id':1, 'total_fat':11, 'saturated_fat':1.5, 'trans_fat':0, 'cholesterol':0, 'sodium':250, 'total_carbs':13 , 'dietary_fiber':1 , 'sugars':0 , 'protein':1 , 'total_cal':160 , 'name':'Hot Cheetos' },
                            {'user_id':1, 'total_fat':0, 'saturated_fat':0, 'trans_fat':0, 'cholesterol':0, 'sodium':440, 'total_carbs':63 , 'dietary_fiber':1 , 'sugars':0 , 'protein':13 , 'total_cal':330 , 'name':'Bagel' },
                            {'user_id':1, 'total_fat':5, 'saturated_fat':1.5, 'trans_fat':0, 'cholesterol':185, 'sodium':70, 'total_carbs':0 , 'dietary_fiber':0 , 'sugars':0 , 'protein':6 , 'total_cal':70 , 'name':'Egg' },
                            {'user_id':1, 'total_fat':0, 'saturated_fat':0, 'trans_fat':0, 'cholesterol':0, 'sodium':24, 'total_carbs':1 , 'dietary_fiber':1 , 'sugars':0 , 'protein':1 , 'total_cal':7 , 'name':'Spinach' },
                        ])

    meta = sa.MetaData(bind=op.get_bind())
    meta.reflect(only=('user_weight',))
    user_weight = sa.Table('user_weight', meta)
    op.bulk_insert(user_weight, [
                            {'user_id':1, 'weight':245, 'day':datetime.datetime(2020, 8, 15)},
                            {'user_id':1, 'weight':250, 'day':datetime.datetime(2020, 8, 10) },
                            {'user_id':1, 'weight':252, 'day':datetime.datetime(2020, 8, 3)},
                            {'user_id':1, 'weight':258, 'day':datetime.datetime(2020, 8, 1)},
                            {'user_id':1, 'weight':254 , 'day': datetime.datetime(2020, 7, 26)},
                            {'user_id':1, 'weight':255, 'day':datetime.datetime(2020, 7, 25)},
                            {'user_id':1, 'weight':255, 'day':datetime.datetime(2020, 7, 24) },
                            {'user_id':1, 'weight':255, 'day':datetime.datetime(2020, 7, 23)},
                            {'user_id':1, 'weight':258, 'day':datetime.datetime(2020, 7, 22)},
                            {'user_id':1, 'weight':259, 'day':datetime.datetime(2020, 7, 21)},
                            {'user_id':1, 'weight':260, 'day':datetime.datetime(2020, 7, 20)},
                            {'user_id':1, 'weight':259, 'day':datetime.datetime(2020, 7, 19)},
                            {'user_id':1, 'weight':260, 'day':datetime.datetime(2020, 7, 18)},
                        ])

    # meta = sa.MetaData(bind=op.get_bind())
    # meta.reflect(only=('meal',))
    # meal = sa.Table('meal', meta)
    # op.bulk_insert(meal, [
    #                         {'user_id':1, 'name':'Spaghetti', 'food_ids':list([1,2,3])},
    #                         {'user_id':1, 'name':'Turkey Lunch', 'food_ids':list([4,5, 5,6]) },
    #                         {'user_id':1, 'name': 'Breakfast Sandwich', 'food_ids':list([7,8,8,9,9])},
    #                     ])

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('foods', 'trans_fat',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('foods', 'total_fat',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('foods', 'total_carbs',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('foods', 'sugars',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('foods', 'sodium',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('foods', 'saturated_fat',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('foods', 'protein',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('foods', 'dietary_fiber',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('foods', 'cholesterol',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    # ### end Alembic commands ###
